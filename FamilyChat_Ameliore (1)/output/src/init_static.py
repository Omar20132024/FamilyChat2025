def init_static_files():
    """
    Initialise les fichiers statiques nécessaires au fonctionnement de l'application.
    Crée les dossiers et fichiers par défaut s'ils n'existent pas.
    """
    import os
    
    # Vérifier si le dossier static/images/profiles existe, sinon le créer
    profiles_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'images', 'profiles')
    if not os.path.exists(profiles_dir):
        os.makedirs(profiles_dir)

    # Créer une image par défaut si elle n'existe pas
    default_image_path = os.path.join(profiles_dir, 'default.jpg')
    if not os.path.exists(default_image_path):
        # Créer un fichier image vide
        with open(default_image_path, 'wb') as f:
            # En-tête JPEG minimal
            f.write(bytes([
                0xFF, 0xD8,                      # SOI marker
                0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00,  # JFIF header
                0xFF, 0xDB, 0x00, 0x43, 0x00,    # DQT marker
                # Quelques valeurs de quantification (simplifiées)
                0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09, 0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12, 0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20, 0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29, 0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32, 0x3C, 0x2E, 0x33, 0x34, 0x32,
                0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x01, 0x00, 0x01, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01,  # SOF marker (1x1 image)
                0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,  # DHT marker
                0xFF, 0xDA, 0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0xA0, 0x00, 0x0F, 0xFF, 0xD9  # SOS marker and EOI
            ]))

    # Vérifier si le dossier static/images existe, sinon le créer
    images_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'images')
    if not os.path.exists(images_dir):
        os.makedirs(images_dir)

    # Créer un logo par défaut si nécessaire
    logo_path = os.path.join(images_dir, 'logo.png')
    if not os.path.exists(logo_path):
        # Créer un fichier PNG minimal
        with open(logo_path, 'wb') as f:
            # En-tête PNG minimal
            f.write(bytes([
                0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A,  # PNG signature
                0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52,  # IHDR chunk
                0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,  # width=16, height=16
                0x08, 0x06, 0x00, 0x00, 0x00, 0x1F, 0xF3, 0xFF, 0x61,  # bit depth, color type, etc.
                0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42,  # sRGB chunk
                0x00, 0xAE, 0xCE, 0x1C, 0xE9, 0x00, 0x00, 0x00,  
                0x04, 0x67, 0x41, 0x4D, 0x41, 0x00, 0x00, 0xB1,  # gAMA chunk
                0x8F, 0x0B, 0xFC, 0x61, 0x05, 0x00, 0x00, 0x00,
                0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E,  # pHYs chunk
                0xC3, 0x00, 0x00, 0x0E, 0xC3, 0x01, 0xC7, 0x6F,
                0xA8, 0x64, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x44,  # IDAT chunk (empty)
                0x41, 0x54, 0x38, 0x4F, 0x63, 0x60, 0x18, 0x05,
                0x83, 0x1D, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01,
                0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,  # IEND chunk
                0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
            ]))
    
    # Vérifier si les dossiers CSS et JS existent, sinon les créer
    css_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'css')
    js_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'js')
    
    if not os.path.exists(css_dir):
        os.makedirs(css_dir)
    
    if not os.path.exists(js_dir):
        os.makedirs(js_dir)
    
    # Copier les fichiers CSS et JS depuis la racine si nécessaire
    root_dir = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))
    
    # Copier style.css
    src_css = os.path.join(root_dir, 'style.css')
    dst_css = os.path.join(css_dir, 'style.css')
    if os.path.exists(src_css) and not os.path.exists(dst_css):
        import shutil
        shutil.copy2(src_css, dst_css)
    
    # Copier additional.css
    src_additional = os.path.join(root_dir, 'additional.css')
    dst_additional = os.path.join(css_dir, 'additional.css')
    if os.path.exists(src_additional) and not os.path.exists(dst_additional):
        import shutil
        shutil.copy2(src_additional, dst_additional)
    
    # Copier main.js
    src_js = os.path.join(root_dir, 'main.js')
    dst_js = os.path.join(js_dir, 'main.js')
    if os.path.exists(src_js) and not os.path.exists(dst_js):
        import shutil
        shutil.copy2(src_js, dst_js)
    
    return "Initialisation des fichiers statiques terminée"
